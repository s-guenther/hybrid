function sim_results = sim_operation_fhandle(signal, control, ...
                                             state, bw_int, opt)
% SIM_OPERATION_FHANDLE specialized simulation for signal type 'fhandle'
%
% SIM_OPERATION_FHANDLE applies the control strategy to the signal at a
% specific cut. It is a specialized function of SIM_OPERATION for signals
% of type 'fhandle'.
%
% SIM_RESULTS = SIM_OPERATION_FHANDLE(SIGNAL, CONTROL, STATE, BW_INT, OPT)
% where SIGNAL is a signal structure generated by GEN_SIGNAL, CONTROL is a
% signal specific control strategy generated by the parent function, as
% well as STATE. BW_INT is the backward integral optained during the
% dimensioning process of the function HYBRID_PAIR. OPT is an options
% structure obtained through HYBRIDSET.
%
% SIM_RESULTS is a structure with the following fields:
%   .powers
%       .base   fhandle, function of time
%       .peak   fhandle, function of time
%   .energies
%       .base   fhandle, function of time
%       .peak   fhandle, function of time
%   .state      fhandle, function of time, control state
% This structure will be complemented by the parent function.
%
%
% See also SIM_OPERATION, CONTROL_FACTORY, HYBRID_PAIR

% Build ODE
ode = @(t, y) control(signal.fcn(t), bw_int.fcn(t), y);

% Solve ODE
odesol = opt.continuous_solver;
[t, y] = odesol(ode, [0 signal.period], [0 0], opt.odeset);

% With ode result, reconstruct power vector
p = zeros(size(y));
for ii = 1:size(p, 1)
    p(ii, :) = control(signal.fcn(t(ii)), bw_int.fcn(t(ii)), y(ii, :));
end

% Do the same for the state vector
s = zeros(size(t));
for ii = 1:size(s, 1)
    s(ii) = state(bw_int.fcn(t(ii)), y(ii, :));
end

% Write to output structure
sim_results.energies.base = @(tt) interp1(t, y(:, 1), tt, opt.intersim);
sim_results.energies.peak = @(tt) interp1(t, y(:, 2), tt, opt.intersim);
sim_results.powers.base = @(tt) interp1(t, p(:, 1), tt, opt.intersim);
sim_results.powers.peak = @(tt) interp1(t, p(:, 2), tt, opt.intersim);
sim_results.state = @(tt) interp1(t, s, tt, 'previous');

end
